[{"/Users/alexduong/Sites/myreact/src/index.js":"1","/Users/alexduong/Sites/myreact/src/App.js":"2","/Users/alexduong/Sites/myreact/src/components/Editor.js":"3","/Users/alexduong/Sites/myreact/src/components/List.js":"4","/Users/alexduong/Sites/myreact/src/helpers/notes.js":"5","/Users/alexduong/Sites/myreact/src/examples/Form.js":"6"},{"size":193,"mtime":1607887511130,"results":"7","hashOfConfig":"8"},{"size":1451,"mtime":1607925362975,"results":"9","hashOfConfig":"8"},{"size":529,"mtime":1607896514280,"results":"10","hashOfConfig":"8"},{"size":534,"mtime":1607912727273,"results":"11","hashOfConfig":"8"},{"size":1387,"mtime":1608037102337,"results":"12","hashOfConfig":"8"},{"size":1451,"mtime":1608035133833,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uja64v",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexduong/Sites/myreact/src/index.js",[],["28","29"],"/Users/alexduong/Sites/myreact/src/App.js",["30","31","32"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport React, {useState, useEffect} from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport List from './components/List'\nimport Editor from './components/Editor'\nimport Form from './examples/Form'\nimport {getNotes} from './helpers/notes'\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = useState(undefined)\n  const [notes, setNotes] = useState([])\n  const [title, setTitle] = useState('')\n\n  useEffect(() => {\n    const notes = getNotes()\n    setNotes(notes)\n  }, [])\n\n  const refreshList = () => {\n    setSelectedNote(undefined)\n    const notes = getNotes()\n    setNotes([...notes])\n  }\n\n  const onClickNewNote = () => setSelectedNote(undefined)\n\n  return (\n    <Container>\n      <Jumbotron>\n        <h1>Notes</h1>\n      </Jumbotron>\n      <Row>\n        <Col xs={12} md={4}>\n          <Button onClick={onClickNewNote} className=\"mb-4\" variant=\"dark\" block>\n            New note\n          </Button>\n          <List notes={notes} selectedNote={selectedNote} setSelectedNote={setSelectedNote} />\n        </Col>\n        <Col xs={12} md={8}>\n          {/*<Editor />*/}\n          <Form refreshList={refreshList} selectedNote={selectedNote} />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App\n","/Users/alexduong/Sites/myreact/src/components/Editor.js",[],"/Users/alexduong/Sites/myreact/src/components/List.js",[],"/Users/alexduong/Sites/myreact/src/helpers/notes.js",[],"/Users/alexduong/Sites/myreact/src/examples/Form.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":9,"column":8,"nodeType":"40","messageId":"41","endLine":9,"endColumn":14},{"ruleId":"38","severity":1,"message":"42","line":16,"column":10,"nodeType":"40","messageId":"41","endLine":16,"endColumn":15},{"ruleId":"38","severity":1,"message":"43","line":16,"column":17,"nodeType":"40","messageId":"41","endLine":16,"endColumn":25},{"ruleId":"38","severity":1,"message":"44","line":3,"column":21,"nodeType":"40","messageId":"41","endLine":3,"endColumn":29},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'Editor' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'getNotes' is defined but never used.","no-global-assign","no-unsafe-negation"]